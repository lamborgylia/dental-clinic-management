#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä–æ–ª–µ–π —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ö–µ—à–µ–º
"""

import bcrypt

def test_passwords():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ö–µ—à–µ–º"""
    
    print("üîß –¢–ï–°–¢ –ü–ê–†–û–õ–ï–ô –° –°–£–©–ï–°–¢–í–£–Æ–©–ò–ú –•–ï–®–ï–ú")
    print("=" * 50)
    
    # –•–µ—à –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    existing_hash = "$2b$12$AFL7x0fCdvyB3xVs9j466uC8zqWj1cFVgrNPa97LK.a"
    existing_hash_bytes = existing_hash.encode('utf-8')
    
    print(f"üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ö–µ—à: {existing_hash[:50]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
    passwords_to_test = [
        'admin123',
        'admin',
        'password',
        '123456',
        'admin1234',
        'Admin123',
        'ADMIN123',
        'admin123!',
        'admin123@',
        'admin123#'
    ]
    
    for password in passwords_to_test:
        password_bytes = password.encode('utf-8')
        is_valid = bcrypt.checkpw(password_bytes, existing_hash_bytes)
        status = "‚úÖ" if is_valid else "‚ùå"
        print(f"{status} –ü–∞—Ä–æ–ª—å \"{password}\": {is_valid}")

if __name__ == "__main__":
    test_passwords()
