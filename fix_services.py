#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
–î–æ–±–∞–≤–ª—è–µ—Ç clinic_id –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —É—Å–ª—É–≥–∞–º
"""

import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT

def fix_services():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏, –¥–æ–±–∞–≤–ª—è—è clinic_id"""
    
    # –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô DATABASE_URL
    DATABASE_URL = "postgresql://dental_user:GE2r01YdmUvFGHWf0iGgjRmDFjVFRPIF@dpg-d3fsu156ubrc73cdsgag-a.singapore-postgres.render.com:5432/dental_clinic_l0tc?sslmode=require"
    
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–õ–£–ì –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(DATABASE_URL)
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–ª–∏–Ω–∏–∫—É
        cursor.execute("SELECT id FROM clinics ORDER BY id LIMIT 1;")
        clinic_id = cursor.fetchone()[0]
        print(f"üè• –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∏–Ω–∏–∫—É ID: {clinic_id}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏, –¥–æ–±–∞–≤–ª—è—è clinic_id
        cursor.execute("""
            UPDATE services 
            SET clinic_id = %s 
            WHERE clinic_id IS NULL;
        """, (clinic_id,))
        
        updated_count = cursor.rowcount
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ª—É–≥: {updated_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("SELECT COUNT(*) FROM services WHERE clinic_id IS NOT NULL;")
        services_with_clinic = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM services;")
        total_services = cursor.fetchone()[0]
        
        print(f"üìä –í—Å–µ–≥–æ —É—Å–ª—É–≥: {total_services}")
        print(f"üìä –£—Å–ª—É–≥ —Å –∫–ª–∏–Ω–∏–∫–æ–π: {services_with_clinic}")
        
        cursor.close()
        conn.close()
        
        print("\n" + "=" * 50)
        print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 50)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–õ–£–ì –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ clinic_id –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —É—Å–ª—É–≥–∞–º")
    print("=" * 50)
    
    success = fix_services()
    if success:
        print("\n‚úÖ –ì–û–¢–û–í–û!")
    else:
        print("\nüí• –û–®–ò–ë–ö–ê!")
