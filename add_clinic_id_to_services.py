#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è clinic_id –≤ —Ç–∞–±–ª–∏—Ü—É services
"""

import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT

def add_clinic_id_to_services():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫—É clinic_id –≤ —Ç–∞–±–ª–∏—Ü—É services"""
    
    # –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô DATABASE_URL
    DATABASE_URL = "postgresql://dental_user:GE2r01YdmUvFGHWf0iGgjRmDFjVFRPIF@dpg-d3fsu156ubrc73cdsgag-a.singapore-postgres.render.com:5432/dental_clinic_l0tc?sslmode=require"
    
    print("üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï CLINIC_ID –í –¢–ê–ë–õ–ò–¶–£ SERVICES")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(DATABASE_URL)
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞ clinic_id
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'services' AND column_name = 'clinic_id';
        """)
        
        if cursor.fetchone():
            print("‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ clinic_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É clinic_id
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É clinic_id...")
            cursor.execute("""
                ALTER TABLE services 
                ADD COLUMN clinic_id INTEGER REFERENCES clinics(id);
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ clinic_id –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–ª–∏–Ω–∏–∫—É
        cursor.execute("SELECT id FROM clinics ORDER BY id LIMIT 1;")
        clinic_id = cursor.fetchone()[0]
        print(f"üè• –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∏–Ω–∏–∫—É ID: {clinic_id}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏, –¥–æ–±–∞–≤–ª—è—è clinic_id
        cursor.execute("""
            UPDATE services 
            SET clinic_id = %s 
            WHERE clinic_id IS NULL;
        """, (clinic_id,))
        
        updated_count = cursor.rowcount
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ª—É–≥: {updated_count}")
        
        # –î–µ–ª–∞–µ–º –∫–æ–ª–æ–Ω–∫—É –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π
        print("üîí –î–µ–ª–∞–µ–º clinic_id –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π...")
        cursor.execute("""
            ALTER TABLE services 
            ALTER COLUMN clinic_id SET NOT NULL;
        """)
        print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ clinic_id —Ç–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("SELECT COUNT(*) FROM services WHERE clinic_id IS NOT NULL;")
        services_with_clinic = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM services;")
        total_services = cursor.fetchone()[0]
        
        print(f"üìä –í—Å–µ–≥–æ —É—Å–ª—É–≥: {total_services}")
        print(f"üìä –£—Å–ª—É–≥ —Å –∫–ª–∏–Ω–∏–∫–æ–π: {services_with_clinic}")
        
        cursor.close()
        conn.close()
        
        print("\n" + "=" * 50)
        print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 50)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï CLINIC_ID –í –¢–ê–ë–õ–ò–¶–£ SERVICES")
    print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    success = add_clinic_id_to_services()
    if success:
        print("\n‚úÖ –ì–û–¢–û–í–û!")
    else:
        print("\nüí• –û–®–ò–ë–ö–ê!")
