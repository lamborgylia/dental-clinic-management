#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–µ–π
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
APPOINTMENTS_URL = f"{BASE_URL}/appointments/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
LOGIN_DATA = {
    "username": "+77771234567",
    "password": "1234"
}

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        response = requests.post(LOGIN_URL, data=LOGIN_DATA)
        if response.status_code == 200:
            data = response.json()
            return data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –∑–∞–ø–∏—Å–µ–π...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    headers = {"Authorization": f"Bearer {token}"}
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    test_params = [
        {"doctor_id": 1},
        {"doctor_id": 1, "page": 1, "size": 100},
        {"doctor_id": 1, "page": 1, "size": 200},
        {"doctor_id": 1, "page": 2, "size": 100},
        {"doctor_id": 1, "page": 1, "size": 50},
    ]
    
    for params in test_params:
        print(f"\nüìä –¢–µ—Å—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: {params}")
        try:
            response = requests.get(APPOINTMENTS_URL, headers=headers, params=params)
            print(f"  –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                appointments = response.json()
                print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(appointments)}")
                if appointments:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—ã –∑–∞–ø–∏—Å–µ–π
                    dates = []
                    for apt in appointments[:5]:
                        apt_date = apt['appointment_datetime'].split('T')[0]
                        dates.append(apt_date)
                    print(f"  –ü–µ—Ä–≤—ã–µ 5 –¥–∞—Ç: {dates}")
            else:
                print(f"  –û—à–∏–±–∫–∞: {response.text}")
        except Exception as e:
            print(f"  –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()

