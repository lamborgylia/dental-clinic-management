#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É treatment_orders –∏ treatment_order_services
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.database import engine, SessionLocal
from sqlalchemy import text

def add_treatment_order_fields():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—ã treatment_orders –∏ treatment_order_services"""
    print("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—ã treatment_orders –∏ treatment_order_services...")
    
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –ø–æ–ª—è –≤ treatment_orders
        result = db.execute(text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'treatment_orders' 
            AND column_name IN ('appointment_id', 'visit_date', 'status', 'clinic_id')
        """))
        existing_columns = [row[0] for row in result.fetchall()]

        if 'appointment_id' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'appointment_id' –≤ treatment_orders...")
            db.execute(text("ALTER TABLE treatment_orders ADD COLUMN appointment_id INTEGER REFERENCES appointments(id)"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'appointment_id' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'appointment_id' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        if 'visit_date' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'visit_date' –≤ treatment_orders...")
            db.execute(text("ALTER TABLE treatment_orders ADD COLUMN visit_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'visit_date' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'visit_date' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        if 'status' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'status' –≤ treatment_orders...")
            db.execute(text("ALTER TABLE treatment_orders ADD COLUMN status VARCHAR(50) DEFAULT 'completed'"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'status' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'status' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        if 'clinic_id' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'clinic_id' –≤ treatment_orders...")
            db.execute(text("ALTER TABLE treatment_orders ADD COLUMN clinic_id INTEGER NOT NULL REFERENCES clinics(id)"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'clinic_id' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'clinic_id' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –ø–æ–ª—è –≤ treatment_order_services
        result = db.execute(text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'treatment_order_services' 
            AND column_name IN ('service_name', 'service_price', 'tooth_number', 'is_completed')
        """))
        existing_columns = [row[0] for row in result.fetchall()]

        if 'service_name' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'service_name' –≤ treatment_order_services...")
            db.execute(text("ALTER TABLE treatment_order_services ADD COLUMN service_name VARCHAR(255) NOT NULL DEFAULT ''"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'service_name' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'service_name' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        if 'service_price' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'service_price' –≤ treatment_order_services...")
            db.execute(text("ALTER TABLE treatment_order_services ADD COLUMN service_price NUMERIC(10, 2) NOT NULL DEFAULT 0.0"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'service_price' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'service_price' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        if 'tooth_number' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'tooth_number' –≤ treatment_order_services...")
            db.execute(text("ALTER TABLE treatment_order_services ADD COLUMN tooth_number INTEGER NOT NULL DEFAULT 0"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'tooth_number' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'tooth_number' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

        if 'is_completed' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü 'is_completed' –≤ treatment_order_services...")
            db.execute(text("ALTER TABLE treatment_order_services ADD COLUMN is_completed INTEGER DEFAULT 0"))
            print("‚úÖ –°—Ç–æ–ª–±–µ—Ü 'is_completed' –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            print("‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü 'is_completed' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        
        db.commit()
        print("‚úÖ –ü–æ–ª—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª–µ–π: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    add_treatment_order_fields()

