#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–∏—Å–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import requests
import json
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
APPOINTMENTS_URL = f"{BASE_URL}/appointments/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
LOGIN_DATA = {
    "username": "+77771234567",
    "password": "1234"
}

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        response = requests.post(LOGIN_URL, data=LOGIN_DATA)
        if response.status_code == 200:
            data = response.json()
            return data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def main():
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    today_2025 = datetime.now().replace(year=2025)
    start_of_week = today_2025 - timedelta(days=today_2025.weekday())
    end_of_week = start_of_week + timedelta(days=6)
    
    print(f"üìÖ –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: {start_of_week.strftime('%d.%m.%Y')} - {end_of_week.strftime('%d.%m.%Y')}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(APPOINTMENTS_URL, headers=headers, params={"doctor_id": 1})
    appointments = response.json()
    
    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {len(appointments)}")
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    current_week_appointments = []
    for apt in appointments:
        apt_date = datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00'))
        if start_of_week.date() <= apt_date.date() <= end_of_week.date():
            current_week_appointments.append(apt)
    
    print(f"üìÖ –ó–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {len(current_week_appointments)}")
    
    if current_week_appointments:
        print(f"\nüìã –í—Å–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:")
        for i, apt in enumerate(current_week_appointments):
            apt_date = datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00'))
            print(f"  {i+1}. {apt.get('patient_name', 'N/A')} - {apt_date.strftime('%d.%m.%Y %H:%M')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ –¥–Ω—è–º
    print(f"\nüìÖ –ó–∞–ø–∏—Å–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏:")
    current_day = start_of_week
    for i in range(7):
        day_name = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'][i]
        day_appointments = [apt for apt in current_week_appointments 
                          if datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00')).date() == current_day.date()]
        print(f"  {day_name} ({current_day.strftime('%d.%m.%Y')}): {len(day_appointments)} –∑–∞–ø–∏—Å–µ–π")
        current_day += timedelta(days=1)

if __name__ == "__main__":
    main()

