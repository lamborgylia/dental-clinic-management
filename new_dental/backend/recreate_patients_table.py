#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.core.database import engine
from app.models.patient import Patient
from sqlalchemy import text

def recreate_patients_table():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"""
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        with engine.connect() as conn:
            conn.execute(text("DROP TABLE IF EXISTS patients CASCADE"))
            conn.commit()
            print("üóëÔ∏è –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ 'patients' —É–¥–∞–ª–µ–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        Patient.metadata.create_all(bind=engine)
        print("‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ 'patients' —Å–æ–∑–¥–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        with engine.connect() as conn:
            result = conn.execute(text("""
                SELECT column_name, data_type, is_nullable 
                FROM information_schema.columns 
                WHERE table_name = 'patients' 
                ORDER BY ordinal_position
            """))
            columns = result.fetchall()
            print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã 'patients':")
            for col in columns:
                print(f"  - {col[0]}: {col[1]} ({'NULL' if col[2] == 'YES' else 'NOT NULL'})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            result = conn.execute(text("SELECT COUNT(*) FROM patients"))
            count = result.scalar()
            print(f"\nüìä –¢–∞–±–ª–∏—Ü–∞ 'patients' —Å–æ–¥–µ—Ä–∂–∏—Ç {count} –∑–∞–ø–∏—Å–µ–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã 'patients': {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("üöÄ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
    success = recreate_patients_table()
    if success:
        print("üéâ –ì–æ—Ç–æ–≤–æ!")
    else:
        print("üí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")
        sys.exit(1)
