#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
"""

import requests
import json
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
APPOINTMENTS_URL = f"{BASE_URL}/appointments/"
USERS_URL = f"{BASE_URL}/users/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
LOGIN_DATA = {
    "username": "+77771234567",
    "password": "1234"
}

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        response = requests.post(LOGIN_URL, data=LOGIN_DATA)
        if response.status_code == 200:
            data = response.json()
            return data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def get_doctors(token):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Ä–∞—á–µ–π"""
    headers = {"Authorization": f"Bearer {token}"}
    try:
        response = requests.get(USERS_URL, headers=headers)
        if response.status_code == 200:
            users = response.json()
            doctors = [user for user in users if user.get('role') == 'doctor']
            return doctors
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–∞—á–µ–π: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–∞—á–µ–π: {e}")
        return []

def get_appointments_for_doctor(token, doctor_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—Ä–∞—á–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    try:
        response = requests.get(APPOINTMENTS_URL, headers=headers, params={"doctor_id": doctor_id})
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –¥–ª—è –≤—Ä–∞—á–∞ {doctor_id}: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –¥–ª—è –≤—Ä–∞—á–∞ {doctor_id}: {e}")
        return []

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    today_2025 = datetime.now().replace(year=2025)
    start_of_week = today_2025 - timedelta(days=today_2025.weekday())
    end_of_week = start_of_week + timedelta(days=6)
    
    print(f"üìÖ –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: {start_of_week.strftime('%d.%m.%Y')} - {end_of_week.strftime('%d.%m.%Y')}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–∞—á–µ–π
    doctors = get_doctors(token)
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≤—Ä–∞—á–µ–π: {len(doctors)}")
    
    total_current_week = 0
    
    for doctor in doctors:
        doctor_id = doctor['id']
        doctor_name = doctor['full_name']
        
        appointments = get_appointments_for_doctor(token, doctor_id)
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
        current_week_appointments = []
        for apt in appointments:
            apt_date = datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00'))
            if start_of_week.date() <= apt_date.date() <= end_of_week.date():
                current_week_appointments.append(apt)
        
        print(f"\nüë®‚Äç‚öïÔ∏è –í—Ä–∞—á {doctor_id} ({doctor_name}):")
        print(f"  üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(appointments)}")
        print(f"  üìÖ –ù–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {len(current_week_appointments)}")
        
        if current_week_appointments:
            print(f"  üìã –ü–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π –Ω–∞ –Ω–µ–¥–µ–ª—é:")
            for i, apt in enumerate(current_week_appointments[:5]):
                apt_date = datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00'))
                print(f"    {i+1}. {apt.get('patient_name', 'N/A')} - {apt_date.strftime('%d.%m.%Y %H:%M')}")
        
        total_current_week += len(current_week_appointments)
    
    print(f"\nüéØ –ò—Ç–æ–≥–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {total_current_week}")

if __name__ == "__main__":
    main()

