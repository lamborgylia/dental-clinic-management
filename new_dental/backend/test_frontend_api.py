#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç frontend
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
PATIENTS_URL = f"{BASE_URL}/patients/"
APPOINTMENTS_URL = f"{BASE_URL}/appointments/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ (–∫–∞–∫ –≤ frontend)
LOGIN_DATA = {
    "username": "+77771234567",
    "password": "1234"
}

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        response = requests.post(LOGIN_URL, data=LOGIN_DATA)
        if response.status_code == 200:
            data = response.json()
            return data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_patients_api(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∫–∞–∫ frontend"""
    headers = {"Authorization": f"Bearer {token}"}
    
    print("\n=== –¢–µ—Å—Ç API –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ ===")
    
    # –¢–µ—Å—Ç 1: –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–∫–∞–∫ –¥–µ–ª–∞–µ—Ç frontend)
    try:
        response = requests.get(PATIENTS_URL, headers=headers)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {list(data.keys())}")
            print(f"üìä –í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {data.get('total', 'N/A')}")
            print(f"üìä –ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(data.get('patients', []))}")
            
            patients = data.get('patients', [])
            print(f"\nüìã –ü–µ—Ä–≤—ã–µ 5 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:")
            for i, patient in enumerate(patients[:5]):
                print(f"  {i+1}. {patient.get('full_name', 'N/A')} - {patient.get('phone', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_appointments_api(token):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø–∏—Å–µ–π –∫–∞–∫ frontend"""
    headers = {"Authorization": f"Bearer {token}"}
    
    print("\n=== –¢–µ—Å—Ç API –∑–∞–ø–∏—Å–µ–π ===")
    
    # –¢–µ—Å—Ç –¥–ª—è –≤—Ä–∞—á–∞ 1 (–∫–∞–∫ –¥–µ–ª–∞–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å)
    try:
        response = requests.get(f"{APPOINTMENTS_URL}?doctor_id=1", headers=headers)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            appointments = response.json()
            print(f"üìä –ó–∞–ø–∏—Å–µ–π –¥–ª—è –≤—Ä–∞—á–∞ 1: {len(appointments)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
            from datetime import datetime, timedelta
            today = datetime.now()
            week_start = today - timedelta(days=today.weekday())
            week_end = week_start + timedelta(days=6)
            
            current_week_appointments = []
            for apt in appointments:
                apt_date = datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00'))
                if week_start <= apt_date <= week_end:
                    current_week_appointments.append(apt)
            
            print(f"üìÖ –ó–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é: {len(current_week_appointments)}")
            
            if current_week_appointments:
                print(f"\nüìã –ó–∞–ø–∏—Å–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:")
                for apt in current_week_appointments[:10]:
                    apt_date = datetime.fromisoformat(apt['appointment_datetime'].replace('Z', '+00:00'))
                    print(f"  - {apt.get('patient_name', 'N/A')} - {apt_date.strftime('%d.%m.%Y %H:%M')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–∞–∫ frontend...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_patients_api(token)
    test_appointments_api(token)

if __name__ == "__main__":
    main()

