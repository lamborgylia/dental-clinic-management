#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∫ –∫–ª–∏–Ω–∏–∫–µ "–£–ª—ã–±–∫–∞"
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
PATIENTS_URL = f"{BASE_URL}/patients/"
CLINIC_PATIENTS_URL = f"{BASE_URL}/clinic-patients/"
CLINICS_URL = f"{BASE_URL}/clinics/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
LOGIN_DATA = {
    "username": "+77771234567",
    "password": "1234"
}

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        response = requests.post(LOGIN_URL, data=LOGIN_DATA)
        if response.status_code == 200:
            data = response.json()
            return data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def get_clinics(token):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–Ω–∏–∫"""
    headers = {"Authorization": f"Bearer {token}"}
    try:
        response = requests.get(CLINICS_URL, headers=headers)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–Ω–∏–∫: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–Ω–∏–∫: {e}")
        return []

def get_patients(token):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"""
    headers = {"Authorization": f"Bearer {token}"}
    try:
        response = requests.get(PATIENTS_URL, headers=headers, params={"page": 1, "size": 100})
        if response.status_code == 200:
            data = response.json()
            return data.get('patients', [])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {e}")
        return []

def add_patient_to_clinic(token, patient_id, clinic_id):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –∫–ª–∏–Ω–∏–∫—É"""
    headers = {"Authorization": f"Bearer {token}"}
    params = {
        "patient_id": patient_id,
        "clinic_id": clinic_id
    }
    data = {
        "is_active": True
    }
    try:
        response = requests.post(CLINIC_PATIENTS_URL, params=params, json=data, headers=headers)
        if response.status_code == 200 or response.status_code == 201:
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id} –≤ –∫–ª–∏–Ω–∏–∫—É {clinic_id}: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_id} –≤ –∫–ª–∏–Ω–∏–∫—É {clinic_id}: {e}")
        return False

def main():
    print("üöÄ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∫ –∫–ª–∏–Ω–∏–∫–µ '–£–ª—ã–±–∫–∞'...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–Ω–∏–∫–∏
    clinics = get_clinics(token)
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–Ω–∏–∫: {len(clinics)}")
    
    # –ò—â–µ–º –∫–ª–∏–Ω–∏–∫—É "–£–ª—ã–±–∫–∞"
    smile_clinic = None
    for clinic in clinics:
        if "—É–ª—ã–±–∫–∞" in clinic.get('name', '').lower() or "smile" in clinic.get('name', '').lower():
            smile_clinic = clinic
            break
    
    if not smile_clinic:
        print("‚ùå –ö–ª–∏–Ω–∏–∫–∞ '–£–ª—ã–±–∫–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∏–Ω–∏–∫–∏:")
        for clinic in clinics:
            print(f"  - {clinic.get('name', 'N/A')} (ID: {clinic.get('id', 'N/A')})")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–ª–∏–Ω–∏–∫–∞: {smile_clinic.get('name')} (ID: {smile_clinic.get('id')})")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
    patients = get_patients(token)
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(patients)}")
    
    if not patients:
        print("‚ùå –ù–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏")
        return
    
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∫ –∫–ª–∏–Ω–∏–∫–µ
    clinic_id = smile_clinic.get('id')
    success_count = 0
    already_assigned_count = 0
    
    for i, patient in enumerate(patients):
        patient_id = patient.get('id')
        patient_name = patient.get('full_name', 'N/A')
        
        print(f"üîÑ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ {i+1}/{len(patients)}: {patient_name}")
        
        result = add_patient_to_clinic(token, patient_id, clinic_id)
        if result:
            success_count += 1
            print(f"  ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω")
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ "—É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω"
            print(f"  ‚ö†Ô∏è –£–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞")
            already_assigned_count += 1
    
    print(f"\nüéâ –ì–æ—Ç–æ–≤–æ!")
    print(f"üìä –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {success_count}")
    print(f"üìä –£–∂–µ –±—ã–ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω—ã: {already_assigned_count}")
    print(f"üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {success_count + already_assigned_count}/{len(patients)}")
    print(f"üè• –ö–ª–∏–Ω–∏–∫–∞: {smile_clinic.get('name')}")

if __name__ == "__main__":
    main()
