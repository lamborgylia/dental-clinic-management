#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ psycopg2
"""

import os
import sys
from sqlalchemy import create_engine, text
from passlib.context import CryptContext

def init_data_final():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è psycopg2 –Ω–∞–ø—Ä—è–º—É—é"""
    
    database_url = os.getenv('DATABASE_URL')
    
    if not database_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        print(f"üì° DATABASE_URL: {database_url[:50]}...")
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        engine = create_engine(
            database_url,
            pool_pre_ping=True,
            pool_recycle=300,
            echo=False,
            connect_args={
                "connect_timeout": 60,
                "application_name": "dental_clinic"
            }
        )
        
        with engine.connect() as conn:
            print("üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
            result = conn.execute(text("SELECT COUNT(*) FROM clinics")).scalar()
            if result > 0:
                print("‚úÖ –î–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å")
                return True
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–Ω–∏–∫—É
            clinic_sql = """
            INSERT INTO clinics (name, description, address, contacts) 
            VALUES ('–£–ª—ã–±–∫–∞', '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞', '—É–ª. –ê–±–∞—è 150', '+7 (727) 123-45-67')
            ON CONFLICT DO NOTHING;
            """
            conn.execute(text(clinic_sql))
            print("‚úÖ –ö–ª–∏–Ω–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
            
            # –ü–æ–ª—É—á–∞–µ–º ID –∫–ª–∏–Ω–∏–∫–∏
            clinic_id = conn.execute(text("SELECT id FROM clinics WHERE name = '–£–ª—ã–±–∫–∞'")).scalar()
            
            # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
            pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
            admin_password = pwd_context.hash("admin123")
            
            admin_sql = f"""
            INSERT INTO users (full_name, phone, password_hash, role, clinic_id) 
            VALUES ('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '+77770000000', '{admin_password}', 'admin', {clinic_id})
            ON CONFLICT (phone) DO NOTHING;
            """
            conn.execute(text(admin_sql))
            print("‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω (+77770000000 / admin123)")
            
            # –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏
            services_sql = [
                "INSERT INTO services (name, price, description) VALUES ('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', 5000.00, '–ü–µ—Ä–≤–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∞') ON CONFLICT DO NOTHING;",
                "INSERT INTO services (name, price, description) VALUES ('–õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞', 15000.00, '–õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞ —Å –ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º') ON CONFLICT DO NOTHING;",
                "INSERT INTO services (name, price, description) VALUES ('–£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞', 8000.00, '–ü—Ä–æ—Å—Ç–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞') ON CONFLICT DO NOTHING;",
                "INSERT INTO services (name, price, description) VALUES ('–ü—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ', 50000.00, '–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–æ–Ω–∫–∏') ON CONFLICT DO NOTHING;",
                "INSERT INTO services (name, price, description) VALUES ('–ß–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤', 12000.00, '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —á–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤') ON CONFLICT DO NOTHING;",
                "INSERT INTO services (name, price, description) VALUES ('–î–µ—Ç—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è', 10000.00, '–õ–µ—á–µ–Ω–∏–µ –∑—É–±–æ–≤ —É –¥–µ—Ç–µ–π') ON CONFLICT DO NOTHING;"
            ]
            
            for sql in services_sql:
                conn.execute(text(sql))
            
            print("‚úÖ –£—Å–ª—É–≥–∏ —Å–æ–∑–¥–∞–Ω—ã")
            print("üéâ –î–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        return False

if __name__ == "__main__":
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ psycopg2...")
    success = init_data_final()
    if success:
        print("üéâ –ì–æ—Ç–æ–≤–æ!")
        sys.exit(0)
    else:
        print("üí• –û—à–∏–±–∫–∞!")
        sys.exit(1)
