#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
"""

import requests
import json
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
APPOINTMENTS_URL = f"{BASE_URL}/appointments/"

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    login_data = {
        "username": "+77771234567",
        "password": "1234"
    }
    
    try:
        response = requests.post(LOGIN_URL, data=login_data)
        if response.status_code == 200:
            return response.json().get("access_token")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {e}")
        return None

def create_test_appointment(token):
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å –æ—Ç–ª–∞–¥–∫–æ–π"""
    headers = {"Authorization": f"Bearer {token}"}
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    tomorrow = datetime.now() + timedelta(days=1)
    appointment_time = tomorrow.replace(hour=10, minute=0, second=0, microsecond=0)
    
    appointment_data = {
        "patient_id": 1,
        "doctor_id": 6,
        "appointment_datetime": appointment_time.isoformat(),
        "service_type": "–¢–µ—Å—Ç–æ–≤–∞—è —É—Å–ª—É–≥–∞",
        "notes": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏",
        "status": "scheduled",
        "registrar_id": 1
    }
    
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:")
    print(json.dumps(appointment_data, indent=2, ensure_ascii=False))
    
    try:
        response = requests.post(APPOINTMENTS_URL, json=appointment_data, headers=headers)
        print(f"\nüì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            return response.json()
        else:
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {e}")
        return None

def main():
    print("üîç –û—Ç–ª–∞–¥–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
    appointment = create_test_appointment(token)
    
    if appointment:
        print(f"\n‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞:")
        print(f"ID: {appointment.get('id')}")
        print(f"Service Type: {appointment.get('service_type')}")
        print(f"Notes: {appointment.get('notes')}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å")

if __name__ == "__main__":
    main()

