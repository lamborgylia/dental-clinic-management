#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
"""

import requests
import json
from datetime import datetime, timedelta
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8001"
LOGIN_URL = f"{BASE_URL}/auth/login"
APPOINTMENTS_URL = f"{BASE_URL}/appointments/"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
LOGIN_DATA = {
    "username": "+77771234567",
    "password": "1234"
}

# –°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ (–¥–æ–±–∞–≤–∏–º –±–æ–ª—å—à–µ)
PATIENTS = [
    {"name": "–ê–π–¥–∞—Ä –ù—É—Ä–ª–∞–Ω–æ–≤", "phone": "+77771234567", "iin": "123456789012"},
    {"name": "–ê—Å–µ–ª—å –ö–∞—Å—ã–º–æ–≤–∞", "phone": "+77771234568", "iin": "123456789013"},
    {"name": "–î–∞–Ω–∏—è—Ä –ê—Ö–º–µ—Ç–æ–≤", "phone": "+77771234569", "iin": "123456789014"},
    {"name": "–ñ–∞–Ω–∞—Ä –ë–µ–∫—Ç–∞—Å–æ–≤–∞", "phone": "+77771234570", "iin": "123456789015"},
    {"name": "–ï—Ä–ª–∞–Ω –°–∞–¥—ã–∫–æ–≤", "phone": "+77771234571", "iin": "123456789016"},
    {"name": "–ê–π–≥—É–ª—å –¢–æ–ª–µ—É–æ–≤–∞", "phone": "+77771234572", "iin": "123456789017"},
    {"name": "–ú–∞—Ä–∞—Ç –ö–µ–Ω–∂–µ–±–∞–µ–≤", "phone": "+77771234573", "iin": "123456789018"},
    {"name": "–ê–ª–º–∞ –ù—É—Ä–ø–µ–∏—Å–æ–≤–∞", "phone": "+77771234574", "iin": "123456789019"},
    {"name": "–°–µ—Ä–∏–∫ –ñ—É–º–∞–±–µ–∫–æ–≤", "phone": "+77771234575", "iin": "123456789020"},
    {"name": "–ì—É–ª—å–Ω–∞—Ä–∞ –ê–±–¥—É–ª–ª–∞–µ–≤–∞", "phone": "+77771234576", "iin": "123456789021"},
    {"name": "–ù—É—Ä–ª–∞–Ω –ë–µ–∫–∂–∞–Ω–æ–≤", "phone": "+77771234577", "iin": "123456789022"},
    {"name": "–ê–π–∂–∞–Ω –ö–∞—Å—ã–º–æ–≤–∞", "phone": "+77771234578", "iin": "123456789023"},
    {"name": "–ï—Ä–∂–∞–Ω –¢–æ–ª–µ—É–æ–≤", "phone": "+77771234579", "iin": "123456789024"},
    {"name": "–ê–ª—Ç—ã–Ω–∞–π –ù—É—Ä–ª–∞–Ω–æ–≤–∞", "phone": "+77771234580", "iin": "123456789025"},
    {"name": "–î–∞—É—Ä–µ–Ω –ê—Ö–º–µ—Ç–æ–≤", "phone": "+77771234581", "iin": "123456789026"},
    {"name": "–ñ–∞–Ω–∞—Ä–≥—É–ª—å –ë–µ–∫—Ç–∞—Å–æ–≤–∞", "phone": "+77771234582", "iin": "123456789027"},
    {"name": "–ê—Å—ã–ª–±–µ–∫ –°–∞–¥—ã–∫–æ–≤", "phone": "+77771234583", "iin": "123456789028"},
    {"name": "–ê–π–≥—É–ª—å –¢–æ–ª–µ—É–æ–≤–∞", "phone": "+77771234584", "iin": "123456789029"},
    {"name": "–ú–∞—Ä–∞—Ç –ö–µ–Ω–∂–µ–±–∞–µ–≤", "phone": "+77771234585", "iin": "123456789030"},
    {"name": "–ê–ª–º–∞ –ù—É—Ä–ø–µ–∏—Å–æ–≤–∞", "phone": "+77771234586", "iin": "123456789031"}
]

# –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥
SERVICES = [
    "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
    "–õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞",
    "–ü–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "–ß–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤",
    "–£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞",
    "–ü—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è",
    "–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—è",
    "–õ–µ—á–µ–Ω–∏–µ –¥–µ—Å–µ–Ω",
    "–û—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ –∑—É–±–æ–≤"
]

# –°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π
DOCTORS = [
    {"id": 1, "name": "–î–æ–∫—Ç–æ—Ä –ê–π–¥–∞—Ä"},
    {"id": 2, "name": "–î–æ–∫—Ç–æ—Ä –ê—Å–µ–ª—å"},
    {"id": 3, "name": "–î–æ–∫—Ç–æ—Ä –î–∞–Ω–∏—è—Ä"}
]

def login():
    """–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"""
    try:
        response = requests.post(LOGIN_URL, data=LOGIN_DATA)
        if response.status_code == 200:
            data = response.json()
            return data['access_token']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def create_patient(token, patient_data):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    try:
        response = requests.post(f"{BASE_URL}/patients/", json=patient_data, headers=headers)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ {patient_data['name']}: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞: {e}")
        return None

def create_appointment(token, appointment_data):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏"""
    headers = {"Authorization": f"Bearer {token}"}
    try:
        response = requests.post(APPOINTMENTS_URL, json=appointment_data, headers=headers)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {e}")
        return None

def main():
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å...")
    
    # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
    token = login()
    if not token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
    patients = []
    for patient_data in PATIENTS:
        patient = create_patient(token, patient_data)
        if patient:
            patients.append(patient)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–∞—Ü–∏–µ–Ω—Ç: {patient_data['name']}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞: {patient_data['name']}")
    
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(patients)}")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏
    appointments_created = 0
    start_date = datetime.now().replace(hour=9, minute=0, second=0, microsecond=0)
    
    for i in range(50):  # –°–æ–∑–¥–∞–µ–º 50 –∑–∞–ø–∏—Å–µ–π
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
        patient = random.choice(patients)
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—Ä–∞—á–∞
        doctor = random.choice(DOCTORS)
        
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —É—Å–ª—É–≥—É
        service = random.choice(SERVICES)
        
        # –°–æ–∑–¥–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è (–≤ —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö 30 –¥–Ω–µ–π)
        appointment_date = start_date + timedelta(days=random.randint(0, 30))
        appointment_time = appointment_date.replace(
            hour=random.randint(9, 18),
            minute=random.choice([0, 30])
        )
        
        # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        appointment_data = {
            "patient_id": patient['id'],
            "doctor_id": doctor['id'],
            "appointment_date": appointment_time.isoformat(),
            "service_type": service,
            "notes": f"–ó–∞–ø–∏—Å—å #{i+1}",
            "status": "scheduled"
        }
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
        appointment = create_appointment(token, appointment_data)
        if appointment:
            appointments_created += 1
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å #{i+1}: {patient['full_name']} - {service} - {appointment_time.strftime('%d.%m.%Y %H:%M')}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å #{i+1}")
    
    print(f"üéâ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {appointments_created}")
    print(f"üìä –í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(patients)}")
    print(f"üìÖ –ó–∞–ø–∏—Å–∏ —Å–æ–∑–¥–∞–Ω—ã –Ω–∞ –ø–µ—Ä–∏–æ–¥: {start_date.strftime('%d.%m.%Y')} - {(start_date + timedelta(days=30)).strftime('%d.%m.%Y')}")

if __name__ == "__main__":
    main()