import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { authService } from '../services/auth';
import TeethMap from '../components/TeethMap';

interface Patient {
  id: number;
  full_name: string;
  phone: string;
  iin: string;
  birth_date: string;
  created_at: string;
}

interface TreatmentPlan {
  id: number;
  patient_id: number;
  patient_name: string;
  diagnosis: string;
  treatment_description: string;
  created_at: string;
  status: string;
  services: number[];
  total_cost: number;
  selected_teeth: number[];
}

interface Appointment {
  id: number;
  patient_id: number;
  patient_name: string;
  doctor_id: number;
  appointment_date: string;
  appointment_time: string;
  status: string;
  notes: string;
}

interface Service {
  id: number;
  name: string;
  description: string;
  price: number;
  category: string;
  duration: string;
  complexity: string;
  is_active: boolean;
}

const PatientDashboard: React.FC = () => {
  const { patientId } = useParams<{ patientId: string }>();
  const navigate = useNavigate();
  const [patient, setPatient] = useState<Patient | null>(null);
  const [treatmentPlans, setTreatmentPlans] = useState<TreatmentPlan[]>([]);
  const [appointments, setAppointments] = useState<Appointment[]>([]);
  const [services, setServices] = useState<Service[]>([]);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState<'overview' | 'treatment-plans' | 'appointments' | 'profile'>('overview');
  const [teethServices, setTeethServices] = useState<Record<number, number[]>>({});

  // Функция для получения всех зубов с назначенными услугами из планов лечения
  const getAllTeethWithServices = () => {
    const allTeethServices: Record<number, number[]> = {};
    
    console.log('Планы лечения:', treatmentPlans);
    
    treatmentPlans.forEach(plan => {
      console.log(`План ${plan.id}: зубы ${plan.selected_teeth}, услуги ${plan.services}`);
      plan.selected_teeth.forEach(toothId => {
        if (!allTeethServices[toothId]) {
          allTeethServices[toothId] = [];
        }
        plan.services.forEach(serviceId => {
          if (!allTeethServices[toothId].includes(serviceId)) {
            allTeethServices[toothId].push(serviceId);
          }
        });
      });
    });
    
    console.log('Итоговые зубы с услугами:', allTeethServices);
    return allTeethServices;
  };

  // Обновляем teethServices при изменении планов лечения
  useEffect(() => {
    const newTeethServices = getAllTeethWithServices();
    console.log('Обновляем teethServices:', newTeethServices);
    setTeethServices(newTeethServices);
  }, [treatmentPlans]);

  useEffect(() => {
    fetchPatientData();
  }, [patientId]);

  const fetchPatientData = async () => {
    try {
      // Тестовые данные
      const testPatient: Patient = {
        id: parseInt(patientId || '1'),
        full_name: 'Иванов Иван Иванович',
        phone: '+7 (777) 123-45-67',
        iin: '030317123456',
        birth_date: '2003-03-17',
        created_at: '2024-01-15'
      };

      const testTreatmentPlans: TreatmentPlan[] = [
        {
          id: 1,
          patient_id: parseInt(patientId || '1'),
          patient_name: testPatient.full_name,
          diagnosis: 'Кариес зубов 18, 21',
          treatment_description: 'Лечение кариеса, пломбирование',
          created_at: '2024-01-20',
          status: 'active',
          services: [1, 2],
          total_cost: 15000,
          selected_teeth: [18, 21]
        }
      ];

      const testAppointments: Appointment[] = [
        {
          id: 1,
          patient_id: parseInt(patientId || '1'),
          patient_name: testPatient.full_name,
          doctor_id: 1,
          appointment_date: '2024-01-25',
          appointment_time: '10:00',
          status: 'scheduled',
          notes: 'Консультация по плану лечения'
        },
        {
          id: 2,
          patient_id: parseInt(patientId || '1'),
          patient_name: testPatient.full_name,
          doctor_id: 1,
          appointment_date: '2024-01-20',
          appointment_time: '14:30',
          status: 'completed',
          notes: 'Лечение кариеса зубов 8, 9'
        }
      ];

      const testServices: Service[] = [
        {
          id: 1,
          name: 'Лечение кариеса',
          description: 'Лечение кариозных полостей',
          price: 8000,
          category: 'therapy',
          duration: '30 минут',
          complexity: 'средняя',
          is_active: true
        },
        {
          id: 2,
          name: 'Пломбирование',
          description: 'Установка пломбы',
          price: 7000,
          category: 'therapy',
          duration: '45 минут',
          complexity: 'средняя',
          is_active: true
        }
      ];

      setPatient(testPatient);
      setTreatmentPlans(testTreatmentPlans);
      setAppointments(testAppointments);
      setServices(testServices);
      setLoading(false);
    } catch (error) {
      console.error('Ошибка загрузки данных пациента:', error);
      setLoading(false);
    }
  };

  const getPlanServices = (plan: TreatmentPlan) => {
    return plan.services || [];
  };

  const getPlanTotalCost = (plan: TreatmentPlan) => {
    return plan.total_cost || 0;
  };

  const getPlanSelectedTeeth = (plan: TreatmentPlan) => {
    return plan.selected_teeth || [];
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active': return '#059669';
      case 'completed': return '#2563eb';
      case 'cancelled': return '#dc2626';
      case 'scheduled': return '#f59e0b';
      default: return '#6b7280';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'active': return 'Активен';
      case 'completed': return 'Завершен';
      case 'cancelled': return 'Отменен';
      case 'scheduled': return 'Запланирован';
      default: return status;
    }
  };

  const handleLogout = () => {
    authService.logout();
    navigate('/login');
  };

  if (loading) {
    return (
      <div style={{ padding: '2rem', textAlign: 'center' }}>
        <div>Загрузка данных пациента...</div>
      </div>
    );
  }

  if (!patient) {
    return (
      <div style={{ padding: '2rem', textAlign: 'center' }}>
        <div>Пациент не найден</div>
      </div>
    );
  }

  return (
    <div style={{ minHeight: '100vh', backgroundColor: '#f9fafb' }}>
      {/* Header */}
      <div style={{
        backgroundColor: 'white',
        padding: '1rem',
        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
        display: 'flex',
        flexDirection: 'column',
        gap: '1rem'
      }}>
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '0.5rem',
          alignItems: 'center',
          textAlign: 'center'
        }}>
          <h1 style={{ 
            margin: 0, 
            color: '#111827',
            fontSize: 'clamp(1.5rem, 4vw, 2rem)',
            lineHeight: '1.2'
          }}>
            Личный кабинет пациента
          </h1>
          <p style={{ 
            margin: 0, 
            color: '#6b7280',
            fontSize: 'clamp(0.875rem, 3vw, 1rem)'
          }}>
            {patient.full_name}
          </p>
        </div>
        <div style={{ 
          display: 'flex', 
          gap: '0.5rem',
          justifyContent: 'center',
          flexWrap: 'wrap'
        }}>
          <button
            onClick={() => navigate('/doctor')}
            style={{
              backgroundColor: '#6b7280',
              color: 'white',
              border: 'none',
              padding: '0.75rem 1rem',
              borderRadius: '0.375rem',
              cursor: 'pointer',
              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
              minWidth: '120px'
            }}
          >
            ← Назад к врачу
          </button>
          <button
            onClick={handleLogout}
            style={{
              backgroundColor: '#dc2626',
              color: 'white',
              border: 'none',
              padding: '0.75rem 1rem',
              borderRadius: '0.375rem',
              cursor: 'pointer',
              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
              minWidth: '80px'
            }}
          >
            Выйти
          </button>
        </div>
      </div>

      {/* Navigation */}
      <div style={{
        backgroundColor: 'white',
        borderBottom: '1px solid #e5e7eb',
        padding: '0 1rem',
        overflowX: 'auto'
      }}>
        <div style={{ 
          display: 'flex', 
          gap: '0.5rem',
          minWidth: 'max-content',
          padding: '0.5rem 0'
        }}>
          <button
            onClick={() => setActiveTab('overview')}
            style={{
              backgroundColor: activeTab === 'overview' ? '#2563eb' : 'transparent',
              color: activeTab === 'overview' ? 'white' : '#374151',
              border: 'none',
              padding: 'clamp(0.75rem, 2vw, 1rem) clamp(1rem, 3vw, 1.5rem)',
              cursor: 'pointer',
              borderBottom: activeTab === 'overview' ? '2px solid #2563eb' : 'none',
              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
              whiteSpace: 'nowrap'
            }}
          >
            Обзор
          </button>
          <button
            onClick={() => setActiveTab('treatment-plans')}
            style={{
              backgroundColor: activeTab === 'treatment-plans' ? '#2563eb' : 'transparent',
              color: activeTab === 'treatment-plans' ? 'white' : '#374151',
              border: 'none',
              padding: 'clamp(0.75rem, 2vw, 1rem) clamp(1rem, 3vw, 1.5rem)',
              cursor: 'pointer',
              borderBottom: activeTab === 'treatment-plans' ? '2px solid #2563eb' : 'none',
              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
              whiteSpace: 'nowrap'
            }}
          >
            Планы лечения
          </button>
          <button
            onClick={() => setActiveTab('appointments')}
            style={{
              backgroundColor: activeTab === 'appointments' ? '#2563eb' : 'transparent',
              color: activeTab === 'appointments' ? 'white' : '#374151',
              border: 'none',
              padding: 'clamp(0.75rem, 2vw, 1rem) clamp(1rem, 3vw, 1.5rem)',
              cursor: 'pointer',
              borderBottom: activeTab === 'appointments' ? '2px solid #2563eb' : 'none',
              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
              whiteSpace: 'nowrap'
            }}
          >
            Приемы
          </button>
          <button
            onClick={() => setActiveTab('profile')}
            style={{
              backgroundColor: activeTab === 'profile' ? '#2563eb' : 'transparent',
              color: activeTab === 'profile' ? 'white' : '#374151',
              border: 'none',
              padding: 'clamp(0.75rem, 2vw, 1rem) clamp(1rem, 3vw, 1.5rem)',
              cursor: 'pointer',
              borderBottom: activeTab === 'profile' ? '2px solid #2563eb' : 'none',
              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
              whiteSpace: 'nowrap'
            }}
          >
            Профиль
          </button>
        </div>
      </div>

      {/* Content */}
      <div style={{ 
        padding: 'clamp(1rem, 4vw, 2rem)',
        maxWidth: '1200px',
        margin: '0 auto'
      }}>
                  {/* Обзор */}
          {activeTab === 'overview' && (
            <div>
              <h2 style={{ 
                marginBottom: 'clamp(1rem, 3vw, 1.5rem)', 
                color: '#111827',
                fontSize: 'clamp(1.5rem, 4vw, 2rem)'
              }}>Обзор</h2>
            
            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', 
              gap: 'clamp(1rem, 3vw, 1.5rem)', 
              marginBottom: '2rem' 
            }}>
              <div style={{ 
                backgroundColor: 'white', 
                padding: 'clamp(1rem, 3vw, 1.5rem)', 
                borderRadius: '0.5rem', 
                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)' 
              }}>
                <h3 style={{ 
                  margin: '0 0 1rem 0', 
                  color: '#111827',
                  fontSize: 'clamp(1rem, 3vw, 1.125rem)'
                }}>📋 Активные планы лечения</h3>
                <div style={{ 
                  fontSize: 'clamp(1.5rem, 5vw, 2rem)', 
                  fontWeight: 'bold', 
                  color: '#2563eb' 
                }}>
                  {treatmentPlans.filter(plan => plan.status === 'active').length}
                </div>
                <p style={{ 
                  margin: '0.5rem 0 0 0', 
                  color: '#6b7280',
                  fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                }}>планов в работе</p>
              </div>
              
              <div style={{ 
                backgroundColor: 'white', 
                padding: 'clamp(1rem, 3vw, 1.5rem)', 
                borderRadius: '0.5rem', 
                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)' 
              }}>
                <h3 style={{ 
                  margin: '0 0 1rem 0', 
                  color: '#111827',
                  fontSize: 'clamp(1rem, 3vw, 1.125rem)'
                }}>🦷 Зубы под лечением</h3>
                <div style={{ 
                  fontSize: 'clamp(1.5rem, 5vw, 2rem)', 
                  fontWeight: 'bold', 
                  color: '#059669' 
                }}>
                  {Object.keys(teethServices).length}
                </div>
                <p style={{ 
                  margin: '0.5rem 0 0 0', 
                  color: '#6b7280',
                  fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                }}>зубов</p>
              </div>
              
              <div style={{ 
                backgroundColor: 'white', 
                padding: 'clamp(1rem, 3vw, 1.5rem)', 
                borderRadius: '0.5rem', 
                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)' 
              }}>
                <h3 style={{ 
                  margin: '0 0 1rem 0', 
                  color: '#111827',
                  fontSize: 'clamp(1rem, 3vw, 1.125rem)'
                }}>📅 Ближайший прием</h3>
                <div style={{ 
                  fontSize: 'clamp(1.25rem, 4vw, 1.5rem)', 
                  fontWeight: 'bold', 
                  color: '#f59e0b' 
                }}>
                  {appointments.filter(apt => apt.status === 'scheduled').length > 0 ? 
                    formatDate(appointments.filter(apt => apt.status === 'scheduled')[0].appointment_date) : 
                    'Нет записей'
                  }
                </div>
                <p style={{ 
                  margin: '0.5rem 0 0 0', 
                  color: '#6b7280',
                  fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                }}>следующий визит</p>
              </div>
            </div>

            {/* Карта зубов */}
            {treatmentPlans.length > 0 && (
              <div style={{ 
                backgroundColor: 'white', 
                padding: 'clamp(1rem, 3vw, 1.5rem)', 
                borderRadius: '0.5rem', 
                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)' 
              }}>
                <h3 style={{ 
                  margin: '0 0 1rem 0', 
                  color: '#111827',
                  fontSize: 'clamp(1.125rem, 3vw, 1.25rem)'
                }}>🦷 Карта зубов</h3>
                <div style={{ 
                  overflowX: 'auto',
                  overflowY: 'hidden',
                  width: '100%',
                  minHeight: '450px'
                }}>
                  <TeethMap
                    selectedTeeth={[]}
                    onToothSelect={() => {}}
                    onClearSelection={() => {}}
                    services={services}
                    onAddServiceToTooth={() => {}}
                    onRemoveServiceFromTooth={() => {}}
                    teethServices={teethServices}
                  />
                </div>
                
                {/* Список зубов с назначенным лечением */}
                {Object.keys(teethServices).length > 0 && (
                  <div style={{ 
                    marginTop: 'clamp(1rem, 3vw, 1.5rem)', 
                    padding: 'clamp(0.75rem, 2vw, 1rem)', 
                    backgroundColor: '#fef2f2', 
                    borderRadius: '0.375rem', 
                    border: '1px solid #fecaca' 
                  }}>
                    <h4 style={{ 
                      margin: '0 0 1rem 0', 
                      fontSize: 'clamp(1rem, 3vw, 1.125rem)', 
                      color: '#991b1b' 
                    }}>
                      🔴 Зубы с назначенным лечением:
                    </h4>
                    <div style={{ 
                      display: 'grid', 
                      gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', 
                      gap: 'clamp(0.75rem, 2vw, 1rem)' 
                    }}>
                                              {Object.entries(teethServices).map(([toothId, serviceIds]) => (
                          <div key={toothId} style={{ 
                            padding: 'clamp(0.75rem, 2vw, 1rem)', 
                            backgroundColor: 'white', 
                            borderRadius: '0.375rem', 
                            border: '2px solid #ef4444',
                            boxShadow: '0 2px 4px rgba(239, 68, 68, 0.1)'
                          }}>
                            <div style={{ 
                              display: 'flex', 
                              alignItems: 'center', 
                              marginBottom: 'clamp(0.5rem, 2vw, 0.75rem)',
                              flexWrap: 'wrap',
                              gap: '0.5rem'
                            }}>
                              <div style={{
                                width: 'clamp(20px, 5vw, 24px)',
                                height: 'clamp(20px, 5vw, 24px)',
                                backgroundColor: '#ef4444',
                                color: 'white',
                                borderRadius: '50%',
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'center',
                                fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',
                                fontWeight: 'bold',
                                flexShrink: 0
                              }}>
                                {toothId}
                              </div>
                              <strong style={{ 
                                color: '#991b1b', 
                                fontSize: 'clamp(1rem, 3vw, 1.125rem)'
                              }}>
                                Зуб {toothId}
                              </strong>
                            </div>
                            
                            <div style={{ marginBottom: '0.5rem' }}>
                              <strong style={{ 
                                color: '#374151', 
                                fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                              }}>Назначенные услуги:</strong>
                            </div>
                            
                            <div style={{ 
                              display: 'flex', 
                              flexDirection: 'column', 
                              gap: 'clamp(0.375rem, 1vw, 0.5rem)' 
                            }}>
                            {serviceIds.map(serviceId => {
                              const service = services.find(s => s.id === serviceId);
                              if (!service) return null;
                              
                              const getServiceColor = (category: string) => {
                                switch (category) {
                                  case 'therapy': return '#10b981';
                                  case 'surgery': return '#ef4444';
                                  case 'prosthetics': return '#f59e0b';
                                  case 'orthodontics': return '#8b5cf6';
                                  case 'hygiene': return '#06b6d4';
                                  default: return '#6b7280';
                                }
                              };
                              
                                                             return (
                                 <div key={serviceId} style={{
                                   padding: 'clamp(0.375rem, 1vw, 0.5rem)',
                                   backgroundColor: '#f9fafb',
                                   borderRadius: '0.25rem',
                                   border: `1px solid ${getServiceColor(service.category)}`,
                                   borderLeft: `4px solid ${getServiceColor(service.category)}`
                                 }}>
                                   <div style={{ 
                                     display: 'flex', 
                                     flexDirection: 'column',
                                     gap: '0.25rem'
                                   }}>
                                     <div style={{ 
                                       display: 'flex', 
                                       justifyContent: 'space-between', 
                                       alignItems: 'flex-start',
                                       flexWrap: 'wrap',
                                       gap: '0.5rem'
                                     }}>
                                       <div style={{ flex: 1, minWidth: '200px' }}>
                                         <div style={{ 
                                           fontWeight: '500', 
                                           color: '#111827', 
                                           fontSize: 'clamp(0.875rem, 3vw, 1rem)',
                                           lineHeight: '1.3'
                                         }}>
                                           {service.name}
                                         </div>
                                         <div style={{ 
                                           fontSize: 'clamp(0.75rem, 2vw, 0.875rem)', 
                                           color: '#6b7280', 
                                           marginTop: '0.125rem',
                                           lineHeight: '1.4'
                                         }}>
                                           {service.description}
                                         </div>
                                       </div>
                                       <div style={{ 
                                         textAlign: 'right',
                                         flexShrink: 0
                                       }}>
                                         <div style={{ 
                                           fontWeight: 'bold', 
                                           color: '#059669', 
                                           fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                                         }}>
                                           {service.price.toLocaleString()} ₸
                                         </div>
                                         <div style={{ 
                                           fontSize: 'clamp(0.75rem, 2vw, 0.875rem)', 
                                           color: '#6b7280' 
                                         }}>
                                           {service.duration}
                                         </div>
                                       </div>
                                     </div>
                                   </div>
                                 </div>
                               );
                            })}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            )}
          </div>
        )}

        {/* Планы лечения */}
        {activeTab === 'treatment-plans' && (
          <div>
            <h2 style={{ 
              marginBottom: 'clamp(1rem, 3vw, 1.5rem)', 
              color: '#111827',
              fontSize: 'clamp(1.5rem, 4vw, 2rem)'
            }}>Планы лечения</h2>
            
            {treatmentPlans.length === 0 ? (
              <div style={{ 
                textAlign: 'center', 
                padding: 'clamp(2rem, 6vw, 3rem)', 
                color: '#6b7280' 
              }}>
                <div style={{ 
                  fontSize: 'clamp(2rem, 8vw, 3rem)', 
                  marginBottom: 'clamp(0.5rem, 2vw, 1rem)' 
                }}>📋</div>
                <div style={{ fontSize: 'clamp(1rem, 3vw, 1.125rem)' }}>
                  Планы лечения не найдены
                </div>
              </div>
            ) : (
              <div style={{ display: 'grid', gap: 'clamp(0.75rem, 2vw, 1rem)' }}>
                                  {treatmentPlans.map(plan => (
                    <div key={plan.id} style={{ 
                      backgroundColor: 'white', 
                      padding: 'clamp(1rem, 3vw, 1.5rem)', 
                      borderRadius: '0.5rem', 
                      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
                      border: '1px solid #e5e7eb'
                    }}>
                      <div style={{ 
                        display: 'flex', 
                        flexDirection: 'column',
                        gap: 'clamp(0.75rem, 2vw, 1rem)',
                        marginBottom: 'clamp(0.75rem, 2vw, 1rem)'
                      }}>
                        <div style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'flex-start',
                          flexWrap: 'wrap',
                          gap: '1rem'
                        }}>
                          <div style={{ flex: 1, minWidth: '250px' }}>
                            <h3 style={{ 
                              margin: '0 0 0.5rem 0', 
                              color: '#111827',
                              fontSize: 'clamp(1.125rem, 3vw, 1.25rem)'
                            }}>План лечения #{plan.id}</h3>
                            <p style={{ 
                              margin: '0 0 0.5rem 0', 
                              color: '#6b7280',
                              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
                              lineHeight: '1.4'
                            }}>
                              <strong>Диагноз:</strong> {plan.diagnosis}
                            </p>
                            <p style={{ 
                              margin: '0 0 0.5rem 0', 
                              color: '#6b7280',
                              fontSize: 'clamp(0.875rem, 3vw, 1rem)',
                              lineHeight: '1.4'
                            }}>
                              <strong>Описание:</strong> {plan.treatment_description}
                            </p>
                          </div>
                          <span style={{
                            backgroundColor: getStatusColor(plan.status),
                            color: 'white',
                            padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 2vw, 0.75rem)',
                            borderRadius: '1rem',
                            fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',
                            fontWeight: '500',
                            whiteSpace: 'nowrap',
                            alignSelf: 'flex-start'
                          }}>
                            {getStatusText(plan.status)}
                          </span>
                        </div>
                    
                                          <div style={{ 
                        display: 'grid', 
                        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', 
                        gap: 'clamp(0.75rem, 2vw, 1rem)', 
                        marginBottom: 'clamp(0.75rem, 2vw, 1rem)' 
                      }}>
                        <div>
                          <strong style={{ 
                            color: '#374151',
                            fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                          }}>Зубы:</strong>
                          <div style={{ marginTop: '0.25rem' }}>
                            {getPlanSelectedTeeth(plan).map(toothId => (
                              <span key={toothId} style={{
                                display: 'inline-block',
                                backgroundColor: '#3b82f6',
                                color: 'white',
                                padding: 'clamp(0.125rem, 1vw, 0.25rem) clamp(0.25rem, 1vw, 0.5rem)',
                                borderRadius: '0.25rem',
                                margin: '0.125rem',
                                fontSize: 'clamp(0.75rem, 2vw, 0.875rem)'
                              }}>
                                {toothId}
                              </span>
                            ))}
                          </div>
                        </div>
                        
                        <div>
                          <strong style={{ 
                            color: '#374151',
                            fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                          }}>Услуги:</strong>
                          <div style={{ marginTop: '0.25rem' }}>
                            {getPlanServices(plan).map(serviceId => {
                              const service = services.find(s => s.id === serviceId);
                              return service ? (
                                <div key={serviceId} style={{ 
                                  fontSize: 'clamp(0.875rem, 3vw, 1rem)', 
                                  color: '#6b7280',
                                  lineHeight: '1.4'
                                }}>
                                  {service.name} - {service.price.toLocaleString()} ₸
                                </div>
                              ) : null;
                            })}
                          </div>
                        </div>
                        
                        <div>
                          <strong style={{ 
                            color: '#374151',
                            fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                          }}>Общая стоимость:</strong>
                          <div style={{ 
                            fontSize: 'clamp(1rem, 3vw, 1.125rem)', 
                            fontWeight: 'bold', 
                            color: '#059669', 
                            marginTop: '0.25rem' 
                          }}>
                            {getPlanTotalCost(plan).toLocaleString()} ₸
                          </div>
                        </div>
                      </div>
                      
                      <div style={{ 
                        fontSize: 'clamp(0.875rem, 3vw, 1rem)', 
                        color: '#6b7280' 
                      }}>
                        Создан: {formatDate(plan.created_at)}
                      </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {/* Приемы */}
        {activeTab === 'appointments' && (
          <div>
            <h2 style={{ 
              marginBottom: 'clamp(1rem, 3vw, 1.5rem)', 
              color: '#111827',
              fontSize: 'clamp(1.5rem, 4vw, 2rem)'
            }}>История приемов</h2>
            
            {appointments.length === 0 ? (
              <div style={{ 
                textAlign: 'center', 
                padding: 'clamp(2rem, 6vw, 3rem)', 
                color: '#6b7280' 
              }}>
                <div style={{ 
                  fontSize: 'clamp(2rem, 8vw, 3rem)', 
                  marginBottom: 'clamp(0.5rem, 2vw, 1rem)' 
                }}>📅</div>
                <div style={{ fontSize: 'clamp(1rem, 3vw, 1.125rem)' }}>
                  Приемы не найдены
                </div>
              </div>
            ) : (
              <div style={{
                backgroundColor: 'white',
                borderRadius: '0.5rem',
                boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',
                overflow: 'auto'
              }}>
                <table style={{ 
                  width: '100%', 
                  borderCollapse: 'collapse',
                  minWidth: '600px'
                }}>
                  <thead>
                    <tr style={{ backgroundColor: '#f9fafb' }}>
                      <th style={{ 
                        padding: 'clamp(0.75rem, 2vw, 1rem)', 
                        textAlign: 'left', 
                        borderBottom: '1px solid #e5e7eb',
                        fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                      }}>Дата</th>
                      <th style={{ 
                        padding: 'clamp(0.75rem, 2vw, 1rem)', 
                        textAlign: 'left', 
                        borderBottom: '1px solid #e5e7eb',
                        fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                      }}>Время</th>
                      <th style={{ 
                        padding: 'clamp(0.75rem, 2vw, 1rem)', 
                        textAlign: 'left', 
                        borderBottom: '1px solid #e5e7eb',
                        fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                      }}>Статус</th>
                      <th style={{ 
                        padding: 'clamp(0.75rem, 2vw, 1rem)', 
                        textAlign: 'left', 
                        borderBottom: '1px solid #e5e7eb',
                        fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                      }}>Заметки</th>
                    </tr>
                  </thead>
                  <tbody>
                    {appointments.map(appointment => (
                      <tr key={appointment.id}>
                        <td style={{ 
                          padding: 'clamp(0.75rem, 2vw, 1rem)', 
                          borderBottom: '1px solid #e5e7eb',
                          fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                        }}>
                          {formatDate(appointment.appointment_date)}
                        </td>
                        <td style={{ 
                          padding: 'clamp(0.75rem, 2vw, 1rem)', 
                          borderBottom: '1px solid #e5e7eb',
                          fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                        }}>
                          {appointment.appointment_time}
                        </td>
                        <td style={{ 
                          padding: 'clamp(0.75rem, 2vw, 1rem)', 
                          borderBottom: '1px solid #e5e7eb'
                        }}>
                          <span style={{
                            backgroundColor: getStatusColor(appointment.status),
                            color: 'white',
                            padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 2vw, 0.75rem)',
                            borderRadius: '1rem',
                            fontSize: 'clamp(0.75rem, 2vw, 0.875rem)',
                            whiteSpace: 'nowrap'
                          }}>
                            {getStatusText(appointment.status)}
                          </span>
                        </td>
                        <td style={{ 
                          padding: 'clamp(0.75rem, 2vw, 1rem)', 
                          borderBottom: '1px solid #e5e7eb', 
                          color: '#6b7280',
                          fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                        }}>
                          {appointment.notes || '-'}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}
          </div>
        )}

        {/* Профиль */}
        {activeTab === 'profile' && (
          <div>
            <h2 style={{ 
              marginBottom: 'clamp(1rem, 3vw, 1.5rem)', 
              color: '#111827',
              fontSize: 'clamp(1.5rem, 4vw, 2rem)'
            }}>Личные данные</h2>
            
            <div style={{ 
              backgroundColor: 'white', 
              padding: 'clamp(1.5rem, 4vw, 2rem)', 
              borderRadius: '0.5rem', 
              boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)' 
            }}>
              <div style={{ 
                display: 'grid', 
                gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))', 
                gap: 'clamp(1.5rem, 4vw, 2rem)' 
              }}>
                <div>
                  <h3 style={{ 
                    margin: '0 0 1rem 0', 
                    color: '#111827',
                    fontSize: 'clamp(1.125rem, 3vw, 1.25rem)'
                  }}>Основная информация</h3>
                  
                  <div style={{ marginBottom: 'clamp(0.75rem, 2vw, 1rem)' }}>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '0.5rem', 
                      fontWeight: '500', 
                      color: '#374151',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      ФИО:
                    </label>
                    <div style={{ 
                      padding: 'clamp(0.5rem, 2vw, 0.75rem)', 
                      backgroundColor: '#f9fafb', 
                      borderRadius: '0.375rem', 
                      border: '1px solid #e5e7eb',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      {patient.full_name}
                    </div>
                  </div>
                  
                  <div style={{ marginBottom: 'clamp(0.75rem, 2vw, 1rem)' }}>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '0.5rem', 
                      fontWeight: '500', 
                      color: '#374151',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      Телефон:
                    </label>
                    <div style={{ 
                      padding: 'clamp(0.5rem, 2vw, 0.75rem)', 
                      backgroundColor: '#f9fafb', 
                      borderRadius: '0.375rem', 
                      border: '1px solid #e5e7eb',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      {patient.phone}
                    </div>
                  </div>
                  
                  <div style={{ marginBottom: 'clamp(0.75rem, 2vw, 1rem)' }}>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '0.5rem', 
                      fontWeight: '500', 
                      color: '#374151',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      ИИН:
                    </label>
                    <div style={{ 
                      padding: 'clamp(0.5rem, 2vw, 0.75rem)', 
                      backgroundColor: '#f9fafb', 
                      borderRadius: '0.375rem', 
                      border: '1px solid #e5e7eb',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      {patient.iin}
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 style={{ 
                    margin: '0 0 1rem 0', 
                    color: '#111827',
                    fontSize: 'clamp(1.125rem, 3vw, 1.25rem)'
                  }}>Дополнительная информация</h3>
                  
                  <div style={{ marginBottom: 'clamp(0.75rem, 2vw, 1rem)' }}>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '0.5rem', 
                      fontWeight: '500', 
                      color: '#374151',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      Дата рождения:
                    </label>
                    <div style={{ 
                      padding: 'clamp(0.5rem, 2vw, 0.75rem)', 
                      backgroundColor: '#f9fafb', 
                      borderRadius: '0.375rem', 
                      border: '1px solid #e5e7eb',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      {formatDate(patient.birth_date)}
                    </div>
                  </div>
                  
                  <div style={{ marginBottom: 'clamp(0.75rem, 2vw, 1rem)' }}>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '0.5rem', 
                      fontWeight: '500', 
                      color: '#374151',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      Дата регистрации:
                    </label>
                    <div style={{ 
                      padding: 'clamp(0.5rem, 2vw, 0.75rem)', 
                      backgroundColor: '#f9fafb', 
                      borderRadius: '0.375rem', 
                      border: '1px solid #e5e7eb',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      {formatDate(patient.created_at)}
                    </div>
                  </div>
                  
                  <div style={{ marginBottom: 'clamp(0.75rem, 2vw, 1rem)' }}>
                    <label style={{ 
                      display: 'block', 
                      marginBottom: '0.5rem', 
                      fontWeight: '500', 
                      color: '#374151',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      Возраст:
                    </label>
                    <div style={{ 
                      padding: 'clamp(0.5rem, 2vw, 0.75rem)', 
                      backgroundColor: '#f9fafb', 
                      borderRadius: '0.375rem', 
                      border: '1px solid #e5e7eb',
                      fontSize: 'clamp(0.875rem, 3vw, 1rem)'
                    }}>
                      {new Date().getFullYear() - new Date(patient.birth_date).getFullYear()} лет
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default PatientDashboard;
