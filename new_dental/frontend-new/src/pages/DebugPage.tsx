import React, { useState, useEffect } from 'react';
import { authService } from '../services/auth';

const DebugPage: React.FC = () => {
  const [user, setUser] = useState(authService.getUser());
  const [debugInfo, setDebugInfo] = useState<any>({});
  const [testResult, setTestResult] = useState<string>('');

  useEffect(() => {
    // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const info = {
      user: user,
      token: localStorage.getItem('access_token'),
      userData: localStorage.getItem('user'),
      userAgent: navigator.userAgent,
      isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
      localStorage: {
        access_token: localStorage.getItem('access_token'),
        user: localStorage.getItem('user'),
        allKeys: Object.keys(localStorage)
      }
    };
    setDebugInfo(info);
  }, [user]);

  const testLogin = async () => {
    try {
      setTestResult('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω...');
      const result = await authService.login({ phone: '+77771234567', password: '1234' });
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage
      localStorage.setItem('access_token', result.access_token);
      localStorage.setItem('user', JSON.stringify(result.user));
      
      setTestResult(`–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω: ${JSON.stringify(result)}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setUser(result.user);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞
      setTimeout(() => {
        const info = {
          user: result.user,
          token: localStorage.getItem('access_token'),
          userData: localStorage.getItem('user'),
          userAgent: navigator.userAgent,
          isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
          localStorage: {
            access_token: localStorage.getItem('access_token'),
            user: localStorage.getItem('user'),
            allKeys: Object.keys(localStorage)
          }
        };
        setDebugInfo(info);
      }, 1000);
    } catch (error) {
      setTestResult(`–û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: ${error}`);
    }
  };

  const testAPI = async () => {
    try {
      setTestResult('–¢–µ—Å—Ç–∏—Ä—É–µ–º API...');
      const token = localStorage.getItem('access_token');
      const response = await fetch('http://192.168.12.93:8001/users/doctors', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        setTestResult(`API —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—É—á–µ–Ω–æ ${data.length} –≤—Ä–∞—á–µ–π`);
      } else {
        setTestResult(`API –æ—à–∏–±–∫–∞: ${response.status} ${response.statusText}`);
      }
    } catch (error) {
      setTestResult(`–û—à–∏–±–∫–∞ API: ${error}`);
    }
  };

  const clearStorage = () => {
    localStorage.clear();
    setTestResult('LocalStorage –æ—á–∏—â–µ–Ω');
    window.location.reload();
  };

  return (
    <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>
      <h1>üîß –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ª–∞–¥–∫–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞</h1>
      
      <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f5f5f5', borderRadius: '8px' }}>
        <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ:</h3>
        <p><strong>User Agent:</strong> {debugInfo.userAgent}</p>
        <p><strong>–ú–æ–±–∏–ª—å–Ω—ã–π:</strong> {debugInfo.isMobile ? '–î–∞' : '–ù–µ—Ç'}</p>
      </div>

      <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#e8f4fd', borderRadius: '8px' }}>
        <h3>–°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:</h3>
        <p><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> {user ? `${user.full_name} (${user.phone})` : '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}</p>
        <p><strong>–¢–æ–∫–µ–Ω:</strong> {debugInfo.token ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}</p>
        <p><strong>–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong> {debugInfo.userData ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}</p>
      </div>

      <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#fff3cd', borderRadius: '8px' }}>
        <h3>LocalStorage:</h3>
        <pre style={{ fontSize: '12px', overflow: 'auto' }}>
          {JSON.stringify(debugInfo.localStorage, null, 2)}
        </pre>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <h3>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</h3>
        <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
          <button 
            onClick={testLogin}
            style={{
              padding: '10px 20px',
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            üîê –¢–µ—Å—Ç –ª–æ–≥–∏–Ω–∞
          </button>
          
          <button 
            onClick={testAPI}
            style={{
              padding: '10px 20px',
              backgroundColor: '#28a745',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            üåê –¢–µ—Å—Ç API
          </button>
          
          <button 
            onClick={clearStorage}
            style={{
              padding: '10px 20px',
              backgroundColor: '#dc3545',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer'
            }}
          >
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
          </button>
        </div>
      </div>

      {testResult && (
        <div style={{ 
          padding: '15px', 
          backgroundColor: '#d4edda', 
          borderRadius: '8px',
          border: '1px solid #c3e6cb'
        }}>
          <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:</h4>
          <p style={{ fontFamily: 'monospace', fontSize: '14px' }}>{testResult}</p>
        </div>
      )}

      <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '8px' }}>
        <h3>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
        <ol>
          <li>–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –ø–æ –∞–¥—Ä–µ—Å—É: <strong>http://192.168.12.93:5173/debug</strong></li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –ª–æ–≥–∏–Ω–∞" –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
          <li>–ï—Å–ª–∏ –ª–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç API"</li>
          <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ</li>
        </ol>
      </div>
    </div>
  );
};

export default DebugPage;
