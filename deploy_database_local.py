#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–ª–∏–Ω–∏–∫–∏
–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
from datetime import datetime, timedelta
import hashlib

def hash_password(password: str) -> str:
    """–•–µ—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å"""
    return hashlib.sha256(password.encode()).hexdigest()

def deploy_database():
    """–ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ô DATABASE_URL
    DATABASE_URL = "postgresql://dental_user:GE2r01YdmUvFGHWf0iGgjRmDFjVFRPIF@dpg-d3fsu156ubrc73cdsgag-a.singapore-postgres.render.com:5432/dental_clinic_l0tc?sslmode=require"
    
    print("‚ö†Ô∏è –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏ YOUR_PASSWORD –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ Render Dashboard!")
    print("üìã –ü—Ä–∏–º–µ—Ä: postgresql://postgres:abc123@dpg-d3fsu156ubrc73cdsgag-a.singapore-postgres.render.com:5432/dental_clinic_l0tc?sslmode=require")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–æ–ª—å –∑–∞–º–µ–Ω–µ–Ω
    if "YOUR_PASSWORD" in DATABASE_URL:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –∑–∞–±—É–¥—å –∑–∞–º–µ–Ω–∏—Ç—å YOUR_PASSWORD –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å!")
        print("üîß –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —Ñ–∞–π–ª deploy_database_local.py –∏ –∑–∞–º–µ–Ω–∏ YOUR_PASSWORD")
        return False
    
    print("üöÄ –ü–û–õ–ù–´–ô –î–ï–ü–õ–û–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(DATABASE_URL)
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        print("\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
        
        tables_sql = [
            # –ö–ª–∏–Ω–∏–∫–∏
            """
            CREATE TABLE IF NOT EXISTS clinics (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                description TEXT,
                address TEXT,
                contacts TEXT,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            """
            CREATE TABLE IF NOT EXISTS users (
                id SERIAL PRIMARY KEY,
                full_name VARCHAR(255) NOT NULL,
                phone VARCHAR(20) UNIQUE NOT NULL,
                password_hash VARCHAR(255) NOT NULL,
                role VARCHAR(50) NOT NULL,
                clinic_id INTEGER REFERENCES clinics(id),
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –ü–∞—Ü–∏–µ–Ω—Ç—ã
            """
            CREATE TABLE IF NOT EXISTS patients (
                id SERIAL PRIMARY KEY,
                full_name VARCHAR(255) NOT NULL,
                phone VARCHAR(20) UNIQUE NOT NULL,
                iin VARCHAR(12) UNIQUE NOT NULL,
                birth_date DATE,
                allergies TEXT,
                chronic_diseases TEXT,
                contraindications TEXT,
                special_notes TEXT,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –£—Å–ª—É–≥–∏
            """
            CREATE TABLE IF NOT EXISTS services (
                id SERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                price DECIMAL(10,2) NOT NULL,
                description TEXT,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –ó–∞–ø–∏—Å–∏
            """
            CREATE TABLE IF NOT EXISTS appointments (
                id SERIAL PRIMARY KEY,
                patient_id INTEGER REFERENCES patients(id),
                doctor_id INTEGER REFERENCES users(id),
                registrar_id INTEGER REFERENCES users(id),
                appointment_datetime TIMESTAMP NOT NULL,
                service_type VARCHAR(255),
                notes TEXT,
                status VARCHAR(50) DEFAULT 'scheduled',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –ü–ª–∞–Ω—ã –ª–µ—á–µ–Ω–∏—è
            """
            CREATE TABLE IF NOT EXISTS treatment_plans (
                id SERIAL PRIMARY KEY,
                patient_id INTEGER REFERENCES patients(id),
                doctor_id INTEGER REFERENCES users(id),
                diagnosis TEXT,
                notes TEXT,
                status VARCHAR(50) DEFAULT 'active',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –£—Å–ª—É–≥–∏ –≤ –ø–ª–∞–Ω–∞—Ö –ª–µ—á–µ–Ω–∏—è
            """
            CREATE TABLE IF NOT EXISTS treatment_plan_services (
                id SERIAL PRIMARY KEY,
                treatment_plan_id INTEGER REFERENCES treatment_plans(id),
                service_id INTEGER REFERENCES services(id),
                tooth_id INTEGER,
                quantity INTEGER DEFAULT 1,
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –ù–∞—Ä—è–¥—ã
            """
            CREATE TABLE IF NOT EXISTS treatment_orders (
                id SERIAL PRIMARY KEY,
                patient_id INTEGER REFERENCES patients(id),
                doctor_id INTEGER REFERENCES users(id),
                appointment_id INTEGER REFERENCES appointments(id),
                visit_date TIMESTAMP,
                total_amount DECIMAL(10,2),
                status VARCHAR(50) DEFAULT 'pending',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –£—Å–ª—É–≥–∏ –≤ –Ω–∞—Ä—è–¥–∞—Ö
            """
            CREATE TABLE IF NOT EXISTS treatment_order_services (
                id SERIAL PRIMARY KEY,
                treatment_order_id INTEGER REFERENCES treatment_orders(id),
                service_id INTEGER REFERENCES services(id),
                tooth_number INTEGER,
                quantity INTEGER DEFAULT 1,
                notes TEXT,
                is_completed BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            """,
            
            # –°–≤—è–∑—å –∫–ª–∏–Ω–∏–∫ –∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
            """
            CREATE TABLE IF NOT EXISTS clinic_patients (
                id SERIAL PRIMARY KEY,
                clinic_id INTEGER REFERENCES clinics(id),
                patient_id INTEGER REFERENCES patients(id),
                first_visit_date TIMESTAMP,
                last_visit_date TIMESTAMP,
                is_active BOOLEAN DEFAULT TRUE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(clinic_id, patient_id)
            );
            """
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        for i, sql in enumerate(tables_sql, 1):
            try:
                cursor.execute(sql)
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {i} —Å–æ–∑–¥–∞–Ω–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ç–∞–±–ª–∏—Ü—ã {i}: {e}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
        print("\nüîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
        indexes_sql = [
            "CREATE INDEX IF NOT EXISTS idx_appointments_datetime ON appointments(appointment_datetime);",
            "CREATE INDEX IF NOT EXISTS idx_appointments_patient ON appointments(patient_id);",
            "CREATE INDEX IF NOT EXISTS idx_appointments_doctor ON appointments(doctor_id);",
            "CREATE INDEX IF NOT EXISTS idx_treatment_plans_patient ON treatment_plans(patient_id);",
            "CREATE INDEX IF NOT EXISTS idx_treatment_orders_patient ON treatment_orders(patient_id);",
            "CREATE INDEX IF NOT EXISTS idx_clinic_patients_clinic ON clinic_patients(clinic_id);",
            "CREATE INDEX IF NOT EXISTS idx_clinic_patients_patient ON clinic_patients(patient_id);"
        ]
        
        for i, sql in enumerate(indexes_sql, 1):
            try:
                cursor.execute(sql)
                print(f"‚úÖ –ò–Ω–¥–µ–∫—Å {i} —Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ {i}: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        cursor.execute("SELECT COUNT(*) FROM clinics;")
        clinic_count = cursor.fetchone()[0]
        
        if clinic_count > 0:
            print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ!")
            response = input("–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): ")
            if response.lower() != 'y':
                print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
                return False
            else:
                # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
                print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
                tables_to_clear = [
                    'treatment_order_services', 'treatment_orders',
                    'treatment_plan_services', 'treatment_plans',
                    'appointments', 'clinic_patients',
                    'patients', 'services', 'users', 'clinics'
                ]
                for table in tables_to_clear:
                    cursor.execute(f"DELETE FROM {table};")
                    print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table} –æ—á–∏—â–µ–Ω–∞")
        
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
        print("\nüìä –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏...")
        
        # 1. –ö–ª–∏–Ω–∏–∫–∏
        print("üè• –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫...")
        clinics_data = [
            ("–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è '–ë–µ–ª–æ—Å–Ω–µ–∂–∫–∞'", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–ª–∏–Ω–∏–∫–∞", "—É–ª. –ê–±–∞—è 150", "+7 (727) 123-45-67"),
            ("–£ –ß–∏–∫–∞—Ç–∏–ª—ã", "–°–µ–º–µ–π–Ω–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è", "–ø—Ä. –î–æ—Å—Ç—ã–∫ 100", "+7 (727) 234-56-78"),
            ("–î–µ–Ω—Ç–∞–ª –ü–ª—é—Å", "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä", "—É–ª. –°–∞—Ç–ø–∞–µ–≤–∞ 50", "+7 (727) 345-67-89")
        ]
        
        clinic_ids = []
        for name, description, address, contacts in clinics_data:
            cursor.execute("""
                INSERT INTO clinics (name, description, address, contacts) 
                VALUES (%s, %s, %s, %s) 
                RETURNING id;
            """, (name, description, address, contacts))
            clinic_id = cursor.fetchone()[0]
            clinic_ids.append(clinic_id)
            print(f"‚úÖ –ö–ª–∏–Ω–∏–∫–∞ '{name}' —Å–æ–∑–¥–∞–Ω–∞ (ID: {clinic_id})")
        
        # 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        print("\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        users_data = [
            ("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "+77771234567", "admin123", "admin", clinic_ids[0]),
            ("–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤", "+77771234568", "doctor123", "doctor", clinic_ids[0]),
            ("–ú–µ–¥—Å–µ—Å—Ç—Ä–∞ –ü–µ—Ç—Ä–æ–≤–∞", "+77771234569", "nurse123", "nurse", clinic_ids[0]),
            ("–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∞", "+77771234570", "registrar123", "registrar", clinic_ids[0]),
            ("–î–æ–∫—Ç–æ—Ä –°–º–∏—Ä–Ω–æ–≤", "+77771234571", "doctor123", "doctor", clinic_ids[1]),
            ("–ú–µ–¥—Å–µ—Å—Ç—Ä–∞ –ö–æ–∑–ª–æ–≤–∞", "+77771234572", "nurse123", "nurse", clinic_ids[1])
        ]
        
        user_ids = []
        for full_name, phone, password, role, clinic_id in users_data:
            password_hash = hash_password(password)
            cursor.execute("""
                INSERT INTO users (full_name, phone, password_hash, role, clinic_id) 
                VALUES (%s, %s, %s, %s, %s) 
                RETURNING id;
            """, (full_name, phone, password_hash, role, clinic_id))
            user_id = cursor.fetchone()[0]
            user_ids.append(user_id)
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{full_name}' —Å–æ–∑–¥–∞–Ω (ID: {user_id})")
        
        # 3. –£—Å–ª—É–≥–∏
        print("\nü¶∑ –°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥...")
        services_data = [
            ("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", 5000.00, "–ü–µ—Ä–≤–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∞"),
            ("–õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞", 15000.00, "–õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞ —Å –ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º"),
            ("–£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞", 8000.00, "–ü—Ä–æ—Å—Ç–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞"),
            ("–ü—Ä–æ—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", 50000.00, "–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ä–æ–Ω–∫–∏"),
            ("–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è", 120000.00, "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑—É–±–Ω–æ–≥–æ –∏–º–ø–ª–∞–Ω—Ç–∞"),
            ("–ß–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤", 10000.00, "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–∏–≥–∏–µ–Ω–∞ –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞"),
            ("–û—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ", 25000.00, "–û—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ –∑—É–±–æ–≤"),
            ("–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—è", 80000.00, "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–∫—É—Å–∞"),
            ("–î–µ—Ç—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è", 12000.00, "–õ–µ—á–µ–Ω–∏–µ –∑—É–±–æ–≤ —É –¥–µ—Ç–µ–π"),
            ("–≠–Ω–¥–æ–¥–æ–Ω—Ç–∏—è", 20000.00, "–õ–µ—á–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        ]
        
        service_ids = []
        for name, price, description in services_data:
            # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ –∫ –ø–µ—Ä–≤–æ–π –∫–ª–∏–Ω–∏–∫–µ
            cursor.execute("""
                INSERT INTO services (name, price, description, clinic_id) 
                VALUES (%s, %s, %s, %s) 
                RETURNING id;
            """, (name, price, description, clinic_ids[0]))
            service_id = cursor.fetchone()[0]
            service_ids.append(service_id)
            print(f"‚úÖ –£—Å–ª—É–≥–∞ '{name}' —Å–æ–∑–¥–∞–Ω–∞ (ID: {service_id})")
        
        # 4. –ü–∞—Ü–∏–µ–Ω—Ç—ã
        print("\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
        patients_data = [
            ("–ê–π–≥—É–ª—å –ù—É—Ä–ª–∞–Ω–æ–≤–∞", "+77771234580", "123456789012", "1990-05-15"),
            ("–ê—Å—Ö–∞—Ç –ö–∞—Å—ã–º–æ–≤", "+77771234581", "123456789013", "1985-08-22"),
            ("–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞", "+77771234582", "123456789014", "1992-12-03"),
            ("–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤", "+77771234583", "123456789015", "1988-03-18"),
            ("–ê–π—à–∞ –¢–æ–ª–µ—É–æ–≤–∞", "+77771234584", "123456789016", "1995-07-25"),
            ("–î–º–∏—Ç—Ä–∏–π –°–º–∏—Ä–Ω–æ–≤", "+77771234585", "123456789017", "1987-11-12"),
            ("–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞", "+77771234586", "123456789018", "1993-04-08"),
            ("–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤", "+77771234587", "123456789019", "1989-09-30")
        ]
        
        patient_ids = []
        for full_name, phone, iin, birth_date in patients_data:
            cursor.execute("""
                INSERT INTO patients (full_name, phone, iin, birth_date) 
                VALUES (%s, %s, %s, %s) 
                RETURNING id;
            """, (full_name, phone, iin, birth_date))
            patient_id = cursor.fetchone()[0]
            patient_ids.append(patient_id)
            print(f"‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç '{full_name}' —Å–æ–∑–¥–∞–Ω (ID: {patient_id})")
        
        # 5. –°–≤—è–∑—å –∫–ª–∏–Ω–∏–∫ –∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        print("\nüîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫ –∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤...")
        for i, patient_id in enumerate(patient_ids):
            # –ü–µ—Ä–≤—ã–µ 4 –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –ø–µ—Ä–≤–æ–π –∫–ª–∏–Ω–∏–∫–µ
            if i < 4:
                clinic_id = clinic_ids[0]
            # –°–ª–µ–¥—É—é—â–∏–µ 2 –≤–æ –≤—Ç–æ—Ä–æ–π –∫–ª–∏–Ω–∏–∫–µ
            elif i < 6:
                clinic_id = clinic_ids[1]
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤ —Ç—Ä–µ—Ç—å–µ–π –∫–ª–∏–Ω–∏–∫–µ
            else:
                clinic_id = clinic_ids[2]
            
            cursor.execute("""
                INSERT INTO clinic_patients (clinic_id, patient_id, first_visit_date) 
                VALUES (%s, %s, %s);
            """, (clinic_id, patient_id, datetime.now() - timedelta(days=30)))
            print(f"‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç {patient_id} –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–ª–∏–Ω–∏–∫–µ {clinic_id}")
        
        # 6. –ó–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º
        print("\nüìÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π...")
        appointments_data = [
            (patient_ids[0], user_ids[1], user_ids[3], datetime.now() + timedelta(days=1, hours=10), "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", "–ü–ª–∞–Ω–æ–≤—ã–π –æ—Å–º–æ—Ç—Ä"),
            (patient_ids[1], user_ids[1], user_ids[3], datetime.now() + timedelta(days=2, hours=14), "–õ–µ—á–µ–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞", "–õ–µ—á–µ–Ω–∏–µ –∑—É–±–∞ 16"),
            (patient_ids[2], user_ids[4], user_ids[3], datetime.now() + timedelta(days=3, hours=11), "–ß–∏—Å—Ç–∫–∞ –∑—É–±–æ–≤", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–∏–≥–∏–µ–Ω–∞"),
            (patient_ids[3], user_ids[1], user_ids[3], datetime.now() + timedelta(days=4, hours=15), "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", "–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–µ—Å–Ω–∞–º–∏"),
            (patient_ids[4], user_ids[4], user_ids[3], datetime.now() + timedelta(days=5, hours=9), "–î–µ—Ç—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è", "–õ–µ—á–µ–Ω–∏–µ –º–æ–ª–æ—á–Ω–æ–≥–æ –∑—É–±–∞")
        ]
        
        appointment_ids = []
        for patient_id, doctor_id, registrar_id, datetime_val, service_type, notes in appointments_data:
            cursor.execute("""
                INSERT INTO appointments (patient_id, doctor_id, registrar_id, appointment_datetime, service_type, notes) 
                VALUES (%s, %s, %s, %s, %s, %s) 
                RETURNING id;
            """, (patient_id, doctor_id, registrar_id, datetime_val, service_type, notes))
            appointment_id = cursor.fetchone()[0]
            appointment_ids.append(appointment_id)
            print(f"‚úÖ –ó–∞–ø–∏—Å—å {appointment_id} —Å–æ–∑–¥–∞–Ω–∞")
        
        cursor.close()
        conn.close()
        
        print("\n" + "=" * 50)
        print("üéâ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("=" * 50)
        
        print("\nüìä –°–æ–∑–¥–∞–Ω–æ:")
        print(f"üè• –ö–ª–∏–Ω–∏–∫: {len(clinic_ids)}")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_ids)}")
        print(f"ü¶∑ –£—Å–ª—É–≥: {len(service_ids)}")
        print(f"üë§ –ü–∞—Ü–∏–µ–Ω—Ç–æ–≤: {len(patient_ids)}")
        print(f"üìÖ –ó–∞–ø–∏—Å–µ–π: {len(appointment_ids)}")
        
        print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
        print("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: +77771234567 / admin123")
        print("–î–æ–∫—Ç–æ—Ä: +77771234568 / doctor123")
        print("–ú–µ–¥—Å–µ—Å—Ç—Ä–∞: +77771234569 / nurse123")
        print("–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä: +77771234570 / registrar123")
        
        print("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ü–û–õ–ù–´–ô –î–ï–ü–õ–û–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü + –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 50)
    
    success = deploy_database()
    if success:
        print("\n‚úÖ –ì–û–¢–û–í–û!")
    else:
        print("\nüí• –û–®–ò–ë–ö–ê!")
